{"ast":null,"code":"import _objectSpread from\"/Users/roydebie/OneDrive/NJ2020/battieboys/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from'react';import ReactDOM from'react-dom';import'./index.css';import App from'./App';import{createStore,applyMiddleware,compose}from'redux';import rootReducer from'./store/reducers/rootReducer';import{Provider}from'react-redux';import thunk from'redux-thunk';import firebase from'./config/fbConfig';import{createFirestoreInstance,reduxFirestore,getFirestore}from'redux-firestore';import{ReactReduxFirebaseProvider,getFirebase}from'react-redux-firebase';import{useSelector}from'react-redux';import{isLoaded}from'react-redux-firebase';import'firebase/firestore';var rrfConfig={userProfile:'projects',useFirestoreForProfile:true};var store=createStore(rootReducer,compose(applyMiddleware(thunk.withExtraArgument({getFirebase:getFirebase,getFirestore:getFirestore})),reduxFirestore(firebase)));var rffProps={firebase:firebase,useFirestoreForProfile:true,config:rrfConfig,dispatch:store.dispatch,createFirestoreInstance:createFirestoreInstance,attachAuthIsReady:true};function AuthIsLoaded(_ref){var children=_ref.children;var auth=useSelector(function(state){return state.firebase.auth;});if(!isLoaded(auth))return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});return children;}ReactDOM.render(/*#__PURE__*/_jsx(Provider,{store:store,children:/*#__PURE__*/_jsx(ReactReduxFirebaseProvider,_objectSpread(_objectSpread({},rffProps),{},{children:/*#__PURE__*/_jsxs(AuthIsLoaded,{children:[/*#__PURE__*/_jsx(App,{}),\" \"]})}))}),document.getElementById('root'));","map":{"version":3,"sources":["/Users/roydebie/OneDrive/NJ2020/battieboys/src/index.js"],"names":["React","ReactDOM","App","createStore","applyMiddleware","compose","rootReducer","Provider","thunk","firebase","createFirestoreInstance","reduxFirestore","getFirestore","ReactReduxFirebaseProvider","getFirebase","useSelector","isLoaded","rrfConfig","userProfile","useFirestoreForProfile","store","withExtraArgument","rffProps","config","dispatch","attachAuthIsReady","AuthIsLoaded","children","auth","state","render","document","getElementById"],"mappings":"oNAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAO,aAAP,CACA,MAAOC,CAAAA,GAAP,KAAgB,OAAhB,CAEA,OAASC,WAAT,CAAsBC,eAAtB,CAAuCC,OAAvC,KAAsD,OAAtD,CACA,MAAOC,CAAAA,WAAP,KAAwB,8BAAxB,CACA,OAASC,QAAT,KAAyB,aAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,mBAArB,CAEA,OAASC,uBAAT,CAAkCC,cAAlC,CAAkDC,YAAlD,KAAsE,iBAAtE,CACA,OAASC,0BAAT,CAAqCC,WAArC,KAAwD,sBAAxD,CAEA,OAASC,WAAT,KAA6B,aAA7B,CACA,OAASC,QAAT,KAA0B,sBAA1B,CAEA,MAAO,oBAAP,CAEA,GAAMC,CAAAA,SAAS,CAAG,CACdC,WAAW,CAAE,UADC,CAEdC,sBAAsB,CAAE,IAFV,CAAlB,CAKA,GAAMC,CAAAA,KAAK,CAAGjB,WAAW,CAACG,WAAD,CACrBD,OAAO,CACHD,eAAe,CAACI,KAAK,CAACa,iBAAN,CAAwB,CAACP,WAAW,CAAXA,WAAD,CAAcF,YAAY,CAAZA,YAAd,CAAxB,CAAD,CADZ,CAEHD,cAAc,CAACF,QAAD,CAFX,CADc,CAAzB,CAOA,GAAMa,CAAAA,QAAQ,CAAG,CACbb,QAAQ,CAARA,QADa,CAEbU,sBAAsB,CAAE,IAFX,CAGbI,MAAM,CAAEN,SAHK,CAIbO,QAAQ,CAAEJ,KAAK,CAACI,QAJH,CAKbd,uBAAuB,CAAvBA,uBALa,CAMbe,iBAAiB,CAAE,IANN,CAAjB,CASA,QAASC,CAAAA,YAAT,MAAoC,IAAZC,CAAAA,QAAY,MAAZA,QAAY,CAChC,GAAMC,CAAAA,IAAI,CAAGb,WAAW,CAAC,SAAAc,KAAK,QAAIA,CAAAA,KAAK,CAACpB,QAAN,CAAemB,IAAnB,EAAN,CAAxB,CACA,GAAI,CAACZ,QAAQ,CAACY,IAAD,CAAb,CAAqB,mBAAO,mCAAP,CACjB,MAAOD,CAAAA,QAAP,CACP,CAED1B,QAAQ,CAAC6B,MAAT,cACI,KAAC,QAAD,EAAU,KAAK,CAAEV,KAAjB,uBACI,KAAC,0BAAD,gCAAgCE,QAAhC,4BACI,MAAC,YAAD,yBAAc,KAAC,GAAD,IAAd,OADJ,GADJ,EADJ,CAMAS,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport firebase from './config/fbConfig'\n\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore'\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase'\n\nimport { useSelector  } from 'react-redux'\nimport { isLoaded  } from 'react-redux-firebase';\n\nimport 'firebase/firestore';\n\nconst rrfConfig = { \n    userProfile: 'projects',\n    useFirestoreForProfile: true\n}\n\nconst store = createStore(rootReducer, \n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reduxFirestore(firebase)\n    )\n    );\n\nconst rffProps = {\n    firebase,\n    useFirestoreForProfile: true,\n    config: rrfConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance,\n    attachAuthIsReady: true\n}\n\nfunction AuthIsLoaded({ children }) {\n    const auth = useSelector(state => state.firebase.auth)\n    if (!isLoaded(auth)) return <div>Loading...</div>;\n        return children\n}\n\nReactDOM.render(\n    <Provider store={store}>\n        <ReactReduxFirebaseProvider {...rffProps}>\n            <AuthIsLoaded><App /> </AuthIsLoaded>\n        </ReactReduxFirebaseProvider>\n    </Provider>, \ndocument.getElementById('root'));"]},"metadata":{},"sourceType":"module"}