{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/roydebie/OneDrive/NJ2020/battieboys/src/components/AXI/Selection.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { blue } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nconst BlueCheckbox = withStyles({\n  root: {\n    color: blue[400],\n    '&$checked': {\n      color: blue[700]\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/_jsxDEV(Checkbox, {\n  color: \"default\",\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 17\n}, this));\nexport default function CheckboxLabels() {\n  _s();\n\n  const [state, setState] = React.useState({\n    if(checkedG = true) {\n      this.checkedF = false;\n    },\n\n    checkedA: true,\n    checkedB: false,\n    checkedF: false,\n    checkedG: true,\n    checkedH: false,\n    checkedI: false\n  });\n\n  if (checkedG = true) {\n    this.checkedF = false;\n  }\n\n  ;\n\n  const handleChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n      row: true,\n      className: \"selectionrow\",\n      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(BlueCheckbox, {\n          checked: state.checkedG,\n          onChange: handleChange,\n          name: \"checkedG\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 22\n        }, this),\n        label: \"Percentage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(BlueCheckbox, {\n          checked: state.checkedF,\n          onChange: handleChange,\n          name: \"checkedF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 22\n        }, this),\n        label: \"Bedrag\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      row: true,\n      className: \"selectionrow\",\n      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(BlueCheckbox, {\n          checked: state.checkedA,\n          onChange: handleChange,\n          name: \"checkedA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 22\n        }, this),\n        label: \"Vanaf aantal stuks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(BlueCheckbox, {\n          checked: state.checkedH,\n          onChange: handleChange,\n          name: \"checkedH\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 22\n        }, this),\n        label: \"Per aantal stuks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      row: true,\n      className: \"selectionrow\",\n      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(BlueCheckbox, {\n          checked: state.checkedB,\n          onChange: handleChange,\n          name: \"checkedB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 22\n        }, this),\n        label: \"Vanaf bepaald bedrag\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(BlueCheckbox, {\n          checked: state.checkedI,\n          onChange: handleChange,\n          name: \"checkedI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 22\n        }, this),\n        label: \"Per bepaald bedrag\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n}\n\n_s(CheckboxLabels, \"ceJn8t2BbSHoj8+uCJ0XT0pOzlw=\");\n\n_c = CheckboxLabels;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckboxLabels\");","map":{"version":3,"sources":["/Users/roydebie/OneDrive/NJ2020/battieboys/src/components/AXI/Selection.js"],"names":["React","withStyles","blue","FormGroup","FormControlLabel","Checkbox","BlueCheckbox","root","color","checked","props","CheckboxLabels","state","setState","useState","if","checkedG","checkedF","checkedA","checkedB","checkedH","checkedI","handleChange","event","target","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,IAAT,QAAqB,0BAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,MAAMC,YAAY,GAAGL,UAAU,CAAC;AAC5BM,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAEN,IAAI,CAAC,GAAD,CADP;AAEJ,iBAAa;AACXM,MAAAA,KAAK,EAAEN,IAAI,CAAC,GAAD;AADA;AAFT,GADsB;AAO5BO,EAAAA,OAAO,EAAE;AAPmB,CAAD,CAAV,CAQfC,KAAD,iBAAW,QAAC,QAAD;AAAU,EAAA,KAAK,EAAC,SAAhB;AAAA,KAA8BA;AAA9B;AAAA;AAAA;AAAA;AAAA,QARK,CAArB;AAUA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AACvC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,KAAK,CAACc,QAAN,CAAe;AACvCC,IAAAA,EAAE,CAACC,QAAQ,GAAG,IAAZ,EAAiB;AACf,WAAKC,QAAL,GAAiB,KAAjB;AACD,KAHoC;;AAIvCC,IAAAA,QAAQ,EAAE,IAJ6B;AAKvCC,IAAAA,QAAQ,EAAE,KAL6B;AAMvCF,IAAAA,QAAQ,EAAE,KAN6B;AAOvCD,IAAAA,QAAQ,EAAE,IAP6B;AAQvCI,IAAAA,QAAQ,EAAE,KAR6B;AASvCC,IAAAA,QAAQ,EAAE;AAT6B,GAAf,CAA1B;;AAWA,MAAGL,QAAQ,GAAG,IAAd,EAAmB;AACjB,SAAKC,QAAL,GAAiB,KAAjB;AACD;;AAAA;;AAED,QAAMK,YAAY,GAAIC,KAAD,IAAW;AAC9BV,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAY,OAACW,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaf;AAA9C,KAAD,CAAR;AACD,GAFD;;AAIA,sBACI;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,GAAG,MAAd;AAAe,MAAA,SAAS,EAAC,cAAzB;AAAA,8BACA,QAAC,gBAAD;AACI,QAAA,OAAO,eAAE,QAAC,YAAD;AAAc,UAAA,OAAO,EAAEG,KAAK,CAACI,QAA7B;AAAuC,UAAA,QAAQ,EAAEM,YAAjD;AAA+D,UAAA,IAAI,EAAC;AAApE;AAAA;AAAA;AAAA;AAAA,gBADb;AAEI,QAAA,KAAK,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cADA,eAKA,QAAC,gBAAD;AACI,QAAA,OAAO,eAAE,QAAC,YAAD;AAAc,UAAA,OAAO,EAAEV,KAAK,CAACK,QAA7B;AAAuC,UAAA,QAAQ,EAAEK,YAAjD;AAA+D,UAAA,IAAI,EAAC;AAApE;AAAA;AAAA;AAAA;AAAA,gBADb;AAEI,QAAA,KAAK,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cALA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUc;AAAA;AAAA;AAAA;AAAA,YAVd,eAWE,QAAC,SAAD;AAAW,MAAA,GAAG,MAAd;AAAe,MAAA,SAAS,EAAC,cAAzB;AAAA,8BACA,QAAC,gBAAD;AACI,QAAA,OAAO,eAAE,QAAC,YAAD;AAAc,UAAA,OAAO,EAAEV,KAAK,CAACM,QAA7B;AAAuC,UAAA,QAAQ,EAAEI,YAAjD;AAA+D,UAAA,IAAI,EAAC;AAApE;AAAA;AAAA;AAAA;AAAA,gBADb;AAEI,QAAA,KAAK,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cADA,eAKA,QAAC,gBAAD;AACI,QAAA,OAAO,eAAE,QAAC,YAAD;AAAc,UAAA,OAAO,EAAEV,KAAK,CAACQ,QAA7B;AAAuC,UAAA,QAAQ,EAAEE,YAAjD;AAA+D,UAAA,IAAI,EAAC;AAApE;AAAA;AAAA;AAAA;AAAA,gBADb;AAEI,QAAA,KAAK,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cALA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAqBE,QAAC,SAAD;AAAW,MAAA,GAAG,MAAd;AAAe,MAAA,SAAS,EAAC,cAAzB;AAAA,8BACA,QAAC,gBAAD;AACI,QAAA,OAAO,eAAE,QAAC,YAAD;AAAc,UAAA,OAAO,EAAEV,KAAK,CAACO,QAA7B;AAAuC,UAAA,QAAQ,EAAEG,YAAjD;AAA+D,UAAA,IAAI,EAAC;AAApE;AAAA;AAAA;AAAA;AAAA,gBADb;AAEI,QAAA,KAAK,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cADA,eAKA,QAAC,gBAAD;AACI,QAAA,OAAO,eAAE,QAAC,YAAD;AAAc,UAAA,OAAO,EAAEV,KAAK,CAACS,QAA7B;AAAuC,UAAA,QAAQ,EAAEC,YAAjD;AAA+D,UAAA,IAAI,EAAC;AAApE;AAAA;AAAA;AAAA;AAAA,gBADb;AAEI,QAAA,KAAK,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cALA;AAAA;AAAA;AAAA;AAAA;AAAA,YArBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCD;;GAtDuBX,c;;KAAAA,c","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { blue } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst BlueCheckbox = withStyles({\n    root: {\n      color: blue[400],\n      '&$checked': {\n        color: blue[700],\n      },\n    },\n    checked: {},\n  })((props) => <Checkbox color=\"default\" {...props} />);\n\nexport default function CheckboxLabels() {\n  const [state, setState] = React.useState({\n    if(checkedG = true){\n        this.checkedF =  false\n      },\n    checkedA: true,\n    checkedB: false,\n    checkedF: false,\n    checkedG: true,\n    checkedH: false,\n    checkedI: false,\n  });\n  if(checkedG = true){\n    this.checkedF =  false\n  };\n\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  return (\n      <div>\n        <FormGroup row className=\"selectionrow\">\n        <FormControlLabel\n            control={<BlueCheckbox checked={state.checkedG} onChange={handleChange} name=\"checkedG\" />}\n            label=\"Percentage\"\n        />\n        <FormControlLabel\n            control={<BlueCheckbox checked={state.checkedF} onChange={handleChange} name=\"checkedF\" />}\n            label=\"Bedrag\"\n        />\n        </FormGroup><br></br>\n        <FormGroup row className=\"selectionrow\">\n        <FormControlLabel\n            control={<BlueCheckbox checked={state.checkedA} onChange={handleChange} name=\"checkedA\" />}\n            label=\"Vanaf aantal stuks\"\n        />\n        <FormControlLabel\n            control={<BlueCheckbox checked={state.checkedH} onChange={handleChange} name=\"checkedH\" />}\n            label=\"Per aantal stuks\"\n        />\n        </FormGroup>\n        <FormGroup row className=\"selectionrow\">\n        <FormControlLabel\n            control={<BlueCheckbox checked={state.checkedB} onChange={handleChange} name=\"checkedB\" />}\n            label=\"Vanaf bepaald bedrag\"\n        />\n        <FormControlLabel\n            control={<BlueCheckbox checked={state.checkedI} onChange={handleChange} name=\"checkedI\" />}\n            label=\"Per bepaald bedrag\"\n        />\n        </FormGroup>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}