{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/roydebie/OneDrive/NJ2020/battieboys/src/components/AXI/ProductListNew.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ActionAnimations, SwipeableList, SwipeableListItem } from '@sandstreamdev/react-swipeable-list';\nimport '@sandstreamdev/react-swipeable-list/dist/styles.css';\nimport { findKey, mapEntries } from '@sandstreamdev/std/object';\nimport BasicListItem from '../list-items/BasicListItem';\nimport BasicSwipeContent from '../list-items/BasicSwipeContent';\nimport './AnimationsExample.css';\n\nconst AnimationsExample = () => {\n  _s();\n\n  const [contentAnimation, setContentAnimation] = useState(ActionAnimations.REMOVE);\n  const [listAnimations, setListAnimations] = useState(true);\n  const [items, setItems] = useState(() => [{\n    id: uuidv4(),\n    text: 'Item 1'\n  }, {\n    id: uuidv4(),\n    text: 'Item 2'\n  }, {\n    id: uuidv4(),\n    text: 'Item 3'\n  }, {\n    id: uuidv4(),\n    text: 'Item 4'\n  }]);\n\n  const deleteItemById = id => setItems(items => items.filter(item => item.id !== id));\n\n  const addItem = () => setItems([...items, {\n    id: uuidv4(),\n    text: `New item`\n  }]);\n\n  const swipeRightOptions = id => ({\n    content: /*#__PURE__*/_jsxDEV(BasicSwipeContent, {\n      label: \"Delete\",\n      position: \"left\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 14\n    }, this),\n    actionAnimation: contentAnimation,\n    action: () => deleteItemById(id)\n  });\n\n  const swipeLeftOptions = id => ({\n    content: /*#__PURE__*/_jsxDEV(BasicSwipeContent, {\n      label: \"Delete\",\n      position: \"right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 14\n    }, this),\n    actionAnimation: contentAnimation,\n    action: () => deleteItemById(id)\n  });\n\n  const handleChangeActionAnimation = ({\n    target: {\n      value\n    }\n  }) => setContentAnimation(ActionAnimations[value]);\n\n  const handleChangeListAnimations = ({\n    target: {\n      value\n    }\n  }) => setListAnimations(value === 'true');\n\n  const threshold = 0.33;\n  const transitionTimeout = 2500;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"page__action--title\",\n      children: [\"Swipe to delete (trigger threshold: \", threshold, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"animations-swipeable-list__container\",\n      children: /*#__PURE__*/_jsxDEV(SwipeableList, {\n        threshold: threshold,\n        children: ({\n          className,\n          scrollStartThreshold,\n          swipeStartThreshold,\n          threshold\n        }) => /*#__PURE__*/_jsxDEV(TransitionGroup, {\n          className: className,\n          enter: listAnimations,\n          exit: listAnimations,\n          children: items.map(({\n            id,\n            text\n          }) => /*#__PURE__*/_jsxDEV(CSSTransition, {\n            classNames: \"my-node\",\n            timeout: transitionTimeout,\n            children: /*#__PURE__*/_jsxDEV(SwipeableListItem, {\n              scrollStartThreshold: scrollStartThreshold,\n              swipeLeft: swipeLeftOptions(id),\n              swipeRight: swipeRightOptions(id),\n              swipeStartThreshold: swipeStartThreshold,\n              threshold: threshold,\n              children: /*#__PURE__*/_jsxDEV(BasicListItem, {\n                label: text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 21\n              }, this)\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"page__button\",\n      onClick: addItem,\n      children: \"Add item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"animations__switcher-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Item content animation:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"page__select animations__switcher\",\n        value: findKey(value => value === contentAnimation)(ActionAnimations),\n        onChange: handleChangeActionAnimation,\n        children: mapEntries((value, key) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: key,\n          children: value.description\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this))(ActionAnimations)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"List content animations:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"page__select animations__switcher\",\n        value: listAnimations,\n        onChange: handleChangeListAnimations,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"true\",\n          children: \"ON\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"false\",\n          children: \"OFF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AnimationsExample, \"owt5h1s63DKGX385RwjjUqzUZhk=\");\n\n_c = AnimationsExample;\nexport default AnimationsExample;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnimationsExample\");","map":{"version":3,"sources":["/Users/roydebie/OneDrive/NJ2020/battieboys/src/components/AXI/ProductListNew.js"],"names":["React","useState","CSSTransition","TransitionGroup","v4","uuidv4","ActionAnimations","SwipeableList","SwipeableListItem","findKey","mapEntries","BasicListItem","BasicSwipeContent","AnimationsExample","contentAnimation","setContentAnimation","REMOVE","listAnimations","setListAnimations","items","setItems","id","text","deleteItemById","filter","item","addItem","swipeRightOptions","content","actionAnimation","action","swipeLeftOptions","handleChangeActionAnimation","target","value","handleChangeListAnimations","threshold","transitionTimeout","className","scrollStartThreshold","swipeStartThreshold","map","key","description"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { v4 as uuidv4 } from 'uuid';\nimport {\n  ActionAnimations,\n  SwipeableList,\n  SwipeableListItem\n} from '@sandstreamdev/react-swipeable-list';\nimport '@sandstreamdev/react-swipeable-list/dist/styles.css';\nimport { findKey, mapEntries } from '@sandstreamdev/std/object';\n\nimport BasicListItem from '../list-items/BasicListItem';\nimport BasicSwipeContent from '../list-items/BasicSwipeContent';\n\nimport './AnimationsExample.css';\n\nconst AnimationsExample = () => {\n  const [contentAnimation, setContentAnimation] = useState(\n    ActionAnimations.REMOVE\n  );\n  const [listAnimations, setListAnimations] = useState(true);\n  const [items, setItems] = useState(() => [\n    { id: uuidv4(), text: 'Item 1' },\n    { id: uuidv4(), text: 'Item 2' },\n    { id: uuidv4(), text: 'Item 3' },\n    { id: uuidv4(), text: 'Item 4' }\n  ]);\n\n  const deleteItemById = id =>\n    setItems(items => items.filter(item => item.id !== id));\n\n  const addItem = () =>\n    setItems([...items, { id: uuidv4(), text: `New item` }]);\n\n  const swipeRightOptions = id => ({\n    content: <BasicSwipeContent label=\"Delete\" position=\"left\" />,\n    actionAnimation: contentAnimation,\n    action: () => deleteItemById(id)\n  });\n\n  const swipeLeftOptions = id => ({\n    content: <BasicSwipeContent label=\"Delete\" position=\"right\" />,\n    actionAnimation: contentAnimation,\n    action: () => deleteItemById(id)\n  });\n\n  const handleChangeActionAnimation = ({ target: { value } }) =>\n    setContentAnimation(ActionAnimations[value]);\n\n  const handleChangeListAnimations = ({ target: { value } }) =>\n    setListAnimations(value === 'true');\n\n  const threshold = 0.33;\n  const transitionTimeout = 2500;\n\n  return (\n    <>\n      <span className=\"page__action--title\">\n        Swipe to delete (trigger threshold: {threshold})\n      </span>\n      <div className=\"animations-swipeable-list__container\">\n        <SwipeableList threshold={threshold}>\n          {({\n            className,\n            scrollStartThreshold,\n            swipeStartThreshold,\n            threshold\n          }) => (\n            <TransitionGroup\n              className={className}\n              enter={listAnimations}\n              exit={listAnimations}\n            >\n              {items.map(({ id, text }) => (\n                <CSSTransition\n                  classNames=\"my-node\"\n                  key={id}\n                  timeout={transitionTimeout}\n                >\n                  <SwipeableListItem\n                    key={id}\n                    scrollStartThreshold={scrollStartThreshold}\n                    swipeLeft={swipeLeftOptions(id)}\n                    swipeRight={swipeRightOptions(id)}\n                    swipeStartThreshold={swipeStartThreshold}\n                    threshold={threshold}\n                  >\n                    <BasicListItem label={text} />\n                  </SwipeableListItem>\n                </CSSTransition>\n              ))}\n            </TransitionGroup>\n          )}\n        </SwipeableList>\n      </div>\n      <button className=\"page__button\" onClick={addItem}>\n        Add item\n      </button>\n      <div className=\"animations__switcher-row\">\n        <span>Item content animation:</span>\n        <select\n          className=\"page__select animations__switcher\"\n          value={findKey(value => value === contentAnimation)(ActionAnimations)}\n          onChange={handleChangeActionAnimation}\n        >\n          {mapEntries((value, key) => (\n            <option key={key} value={key}>\n              {value.description}\n            </option>\n          ))(ActionAnimations)}\n        </select>\n      </div>\n      <div>\n        <span>List content animations:</span>\n        <select\n          className=\"page__select animations__switcher\"\n          value={listAnimations}\n          onChange={handleChangeListAnimations}\n        >\n          <option value=\"true\">ON</option>\n          <option value=\"false\">OFF</option>\n        </select>\n      </div>\n    </>\n  );\n};\n\nexport default AnimationsExample;"]},"metadata":{},"sourceType":"module"}