{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/roydebie/OneDrive/NJ2020/battieboys/src/components/AXI/Selection.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { blue } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nconst GreenCheckbox = withStyles({\n  root: {\n    color: blue[400],\n    '&$checked': {\n      color: blue[700]\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/_jsxDEV(Checkbox, {\n  color: \"default\",\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 17\n}, this));\nexport default function CheckboxLabels() {\n  _s();\n\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedF: true,\n    checkedG: true\n  });\n\n  const handleChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormGroup, {\n    row: true,\n    children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(GreenCheckbox, {\n        checked: state.checkedG,\n        onChange: handleChange,\n        name: \"checkedG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 18\n      }, this),\n      label: \"Custom color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CheckboxLabels, \"PUpkqKe+0dGeoiDL+DQ3ezN1YQI=\");\n\n_c = CheckboxLabels;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckboxLabels\");","map":{"version":3,"sources":["/Users/roydebie/OneDrive/NJ2020/battieboys/src/components/AXI/Selection.js"],"names":["React","withStyles","blue","FormGroup","FormControlLabel","Checkbox","GreenCheckbox","root","color","checked","props","CheckboxLabels","state","setState","useState","checkedA","checkedB","checkedF","checkedG","handleChange","event","target","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,IAAT,QAAqB,0BAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,MAAMC,aAAa,GAAGL,UAAU,CAAC;AAC7BM,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAEN,IAAI,CAAC,GAAD,CADP;AAEJ,iBAAa;AACXM,MAAAA,KAAK,EAAEN,IAAI,CAAC,GAAD;AADA;AAFT,GADuB;AAO7BO,EAAAA,OAAO,EAAE;AAPoB,CAAD,CAAV,CAQhBC,KAAD,iBAAW,QAAC,QAAD;AAAU,EAAA,KAAK,EAAC,SAAhB;AAAA,KAA8BA;AAA9B;AAAA;AAAA;AAAA;AAAA,QARM,CAAtB;AAUA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AACvC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,KAAK,CAACc,QAAN,CAAe;AACvCC,IAAAA,QAAQ,EAAE,IAD6B;AAEvCC,IAAAA,QAAQ,EAAE,IAF6B;AAGvCC,IAAAA,QAAQ,EAAE,IAH6B;AAIvCC,IAAAA,QAAQ,EAAE;AAJ6B,GAAf,CAA1B;;AAOA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BP,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAY,OAACQ,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaZ;AAA9C,KAAD,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,SAAD;AAAW,IAAA,GAAG,MAAd;AAAA,2BACE,QAAC,gBAAD;AACE,MAAA,OAAO,eAAE,QAAC,aAAD;AAAe,QAAA,OAAO,EAAEG,KAAK,CAACM,QAA9B;AAAwC,QAAA,QAAQ,EAAEC,YAAlD;AAAgE,QAAA,IAAI,EAAC;AAArE;AAAA;AAAA;AAAA;AAAA,cADX;AAEE,MAAA,KAAK,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GApBuBR,c;;KAAAA,c","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { blue } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst GreenCheckbox = withStyles({\n    root: {\n      color: blue[400],\n      '&$checked': {\n        color: blue[700],\n      },\n    },\n    checked: {},\n  })((props) => <Checkbox color=\"default\" {...props} />);\n\nexport default function CheckboxLabels() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedF: true,\n    checkedG: true,\n  });\n\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  return (\n    <FormGroup row>\n      <FormControlLabel\n        control={<GreenCheckbox checked={state.checkedG} onChange={handleChange} name=\"checkedG\" />}\n        label=\"Custom color\"\n      />\n    </FormGroup>\n  );\n}"]},"metadata":{},"sourceType":"module"}