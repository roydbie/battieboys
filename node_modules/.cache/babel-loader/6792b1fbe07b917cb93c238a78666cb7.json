{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/roydebie/OneDrive/NJ2020/battieboys/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport firebase from './config/fbConfig';\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport 'firebase/firestore';\nconst rrfConfig = {\n  userProfile: 'projects',\n  useFirestoreForProfile: true\n};\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk.withExtraArgument({\n  getFirebase,\n  getFirestore\n})), reduxFirestore(firebase)));\nconst rffProps = {\n  firebase,\n  useFirestoreForProfile: true,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\nReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(ReactReduxFirebaseProvider, { ...rffProps,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 39,\n  columnNumber: 5\n}, this), document.getElementById('root'));\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/roydebie/OneDrive/NJ2020/battieboys/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","createStore","applyMiddleware","compose","rootReducer","Provider","thunk","firebase","createFirestoreInstance","reduxFirestore","getFirestore","ReactReduxFirebaseProvider","getFirebase","rrfConfig","userProfile","useFirestoreForProfile","store","withExtraArgument","rffProps","config","dispatch","render","document","getElementById","unregister"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,SAASC,uBAAT,EAAkCC,cAAlC,EAAkDC,YAAlD,QAAsE,iBAAtE;AACA,SAASC,0BAAT,EAAqCC,WAArC,QAAwD,sBAAxD;AAEA,OAAO,oBAAP;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,WAAW,EAAE,UADC;AAEdC,EAAAA,sBAAsB,EAAE;AAFV,CAAlB;AAKA,MAAMC,KAAK,GAAGf,WAAW,CAACG,WAAD,EACrBD,OAAO,CACHD,eAAe,CAACI,KAAK,CAACW,iBAAN,CAAwB;AAACL,EAAAA,WAAD;AAAcF,EAAAA;AAAd,CAAxB,CAAD,CADZ,EAEHD,cAAc,CAACF,QAAD,CAFX,CADc,CAAzB;AAOA,MAAMW,QAAQ,GAAG;AACbX,EAAAA,QADa;AAEbQ,EAAAA,sBAAsB,EAAE,IAFX;AAGbI,EAAAA,MAAM,EAAEN,SAHK;AAIbO,EAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAJH;AAKbZ,EAAAA;AALa,CAAjB;AAQAV,QAAQ,CAACuB,MAAT,eACI,QAAC,QAAD;AAAU,EAAA,KAAK,EAAEL,KAAjB;AAAA,yBACI,QAAC,0BAAD,OAAgCE,QAAhC;AAAA,2BACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,QADJ,EAMAI,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANA;AAQAvB,aAAa,CAACwB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport firebase from './config/fbConfig'\n\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore'\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase'\n\nimport 'firebase/firestore';\n\nconst rrfConfig = { \n    userProfile: 'projects',\n    useFirestoreForProfile: true\n}\n\nconst store = createStore(rootReducer, \n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reduxFirestore(firebase)\n    )\n    );\n\nconst rffProps = {\n    firebase,\n    useFirestoreForProfile: true,\n    config: rrfConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance\n}\n\nReactDOM.render(\n    <Provider store={store}>\n        <ReactReduxFirebaseProvider {...rffProps}>\n            <App />  \n        </ReactReduxFirebaseProvider>\n    </Provider>, \ndocument.getElementById('root'));\n\nserviceWorker.unregister();"]},"metadata":{},"sourceType":"module"}